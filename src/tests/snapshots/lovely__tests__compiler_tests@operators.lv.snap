---
source: src/tests/mod.rs
expression: tokens
input_file: src/tests/source_files/operators.lv
---
[
    Token {
        kind: ExclamationMark,
        span: Span {
            start: 16,
            end: 17,
        },
    },
    Token {
        kind: True,
        span: Span {
            start: 17,
            end: 21,
        },
    },
    Token {
        kind: Semicolon,
        span: Span {
            start: 21,
            end: 22,
        },
    },
    Token {
        kind: Minus,
        span: Span {
            start: 24,
            end: 25,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 25,
            end: 26,
        },
    },
    Token {
        kind: Semicolon,
        span: Span {
            start: 26,
            end: 27,
        },
    },
    Token {
        kind: LParen,
        span: Span {
            start: 44,
            end: 45,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 45,
            end: 46,
        },
    },
    Token {
        kind: Minus,
        span: Span {
            start: 47,
            end: 48,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 49,
            end: 50,
        },
    },
    Token {
        kind: RParen,
        span: Span {
            start: 50,
            end: 51,
        },
    },
    Token {
        kind: Asterisk,
        span: Span {
            start: 52,
            end: 53,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 54,
            end: 55,
        },
    },
    Token {
        kind: Semicolon,
        span: Span {
            start: 55,
            end: 56,
        },
    },
    Token {
        kind: LParen,
        span: Span {
            start: 58,
            end: 59,
        },
    },
    Token {
        kind: LParen,
        span: Span {
            start: 59,
            end: 60,
        },
    },
    Token {
        kind: LParen,
        span: Span {
            start: 60,
            end: 61,
        },
    },
    Token {
        kind: LParen,
        span: Span {
            start: 61,
            end: 62,
        },
    },
    Token {
        kind: LParen,
        span: Span {
            start: 62,
            end: 63,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 63,
            end: 64,
        },
    },
    Token {
        kind: RParen,
        span: Span {
            start: 64,
            end: 65,
        },
    },
    Token {
        kind: RParen,
        span: Span {
            start: 65,
            end: 66,
        },
    },
    Token {
        kind: RParen,
        span: Span {
            start: 66,
            end: 67,
        },
    },
    Token {
        kind: RParen,
        span: Span {
            start: 67,
            end: 68,
        },
    },
    Token {
        kind: RParen,
        span: Span {
            start: 68,
            end: 69,
        },
    },
    Token {
        kind: Slash,
        span: Span {
            start: 70,
            end: 71,
        },
    },
    Token {
        kind: Minus,
        span: Span {
            start: 72,
            end: 73,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 73,
            end: 74,
        },
    },
    Token {
        kind: Minus,
        span: Span {
            start: 75,
            end: 76,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 77,
            end: 79,
        },
    },
    Token {
        kind: Semicolon,
        span: Span {
            start: 79,
            end: 80,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 82,
            end: 83,
        },
    },
    Token {
        kind: LessThan,
        span: Span {
            start: 84,
            end: 85,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 86,
            end: 87,
        },
    },
    Token {
        kind: Semicolon,
        span: Span {
            start: 87,
            end: 88,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 89,
            end: 90,
        },
    },
    Token {
        kind: GreaterThan,
        span: Span {
            start: 91,
            end: 92,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 93,
            end: 94,
        },
    },
    Token {
        kind: Semicolon,
        span: Span {
            start: 94,
            end: 95,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 96,
            end: 97,
        },
    },
    Token {
        kind: LessThanOrEqual,
        span: Span {
            start: 98,
            end: 100,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 101,
            end: 102,
        },
    },
    Token {
        kind: Semicolon,
        span: Span {
            start: 102,
            end: 103,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 104,
            end: 105,
        },
    },
    Token {
        kind: GreaterThanOrEqual,
        span: Span {
            start: 106,
            end: 108,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 109,
            end: 110,
        },
    },
    Token {
        kind: Semicolon,
        span: Span {
            start: 110,
            end: 111,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 113,
            end: 114,
        },
    },
    Token {
        kind: DoubleEqual,
        span: Span {
            start: 115,
            end: 117,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 118,
            end: 119,
        },
    },
    Token {
        kind: Semicolon,
        span: Span {
            start: 119,
            end: 120,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 121,
            end: 122,
        },
    },
    Token {
        kind: NotEqual,
        span: Span {
            start: 123,
            end: 125,
        },
    },
    Token {
        kind: IntLiteral,
        span: Span {
            start: 126,
            end: 127,
        },
    },
    Token {
        kind: Semicolon,
        span: Span {
            start: 127,
            end: 128,
        },
    },
]
