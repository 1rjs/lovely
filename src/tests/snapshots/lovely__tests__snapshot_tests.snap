---
source: src/tests/mod.rs
description: src/tests/cases/01_arithmetic
expression: asm
---
bits 64
global _start

section .rodata

  main#3: dq FUN#0


section .text

_start:
  ; goto FUN#0
  jmp FUN#0


FUN#0:
  enter 0, 0

  ; t1 := 8 / 4
  mov rax, 8
  cqo
  idiv qword 4
  push qword rax

  ; x#0 := t1
  push qword [rbp - 8]

  ; t2 := x#0 + 1
  mov rax, [rbp - 16]
  add rax, 1
  push qword rax

  ; y#1 := t2
  push qword [rbp - 24]

  ; t3 := y#1 * 2
  mov rax, [rbp - 32]
  imul rax, 2
  push qword rax

  ; t4 := t3 - 1
  mov rax, [rbp - 40]
  sub rax, 1
  push qword rax

  ; z#2 := t4
  push qword [rbp - 48]

  ; exit z#2
  mov rax, 60
  mov rdi, [rbp - 56]
  syscall
